
procedure hub_depressed_index(g: graph, id: nodeProperty<int>(g), node_cnt: int; scores: nodeProperty<vect<double>[node_cnt]>) {
    foreach (n : g.nodes)
        n.scores = 0;
    foreach (x : g.nodes) {
        vect<double>[node_cnt] scores;
        for (y : g.nodes) {
            if (x.id != y.id && !x.hasEdgeTo(y)) {
                double c = 0.0;
                double k = x.degree();
                if (x.degree() < y.degree()) k = y.degree();
                foreach (s : y.nbrs) {
                    if (x.hasEdgeTo(s))
                        c += 1.0;
                }
                scores[y.id] = c / k;
            }
        }
        x.scores = scores;
    }
}
